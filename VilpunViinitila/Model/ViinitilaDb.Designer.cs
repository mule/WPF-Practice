//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace VilpunViinitila.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ViinitilaDbContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ViinitilaDbContainer object using the connection string found in the 'ViinitilaDbContainer' section of the application configuration file.
        /// </summary>
        public ViinitilaDbContainer() : base("name=ViinitilaDbContainer", "ViinitilaDbContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ViinitilaDbContainer object.
        /// </summary>
        public ViinitilaDbContainer(string connectionString) : base(connectionString, "ViinitilaDbContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ViinitilaDbContainer object.
        /// </summary>
        public ViinitilaDbContainer(EntityConnection connection) : base(connection, "ViinitilaDbContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Wine> WineSet
        {
            get
            {
                if ((_WineSet == null))
                {
                    _WineSet = base.CreateObjectSet<Wine>("WineSet");
                }
                return _WineSet;
            }
        }
        private ObjectSet<Wine> _WineSet;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WineSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWineSet(Wine wine)
        {
            base.AddObject("WineSet", wine);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ViinitilaDb", Name="Wine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Wine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Wine object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="wineName">Initial value of the WineName property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="grape">Initial value of the Grape property.</param>
        /// <param name="region">Initial value of the Region property.</param>
        /// <param name="sortiment">Initial value of the Sortiment property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static Wine CreateWine(global::System.Int32 id, global::System.String wineName, global::System.String country, global::System.String grape, global::System.String region, global::System.String sortiment, global::System.Double price)
        {
            Wine wine = new Wine();
            wine.Id = id;
            wine.WineName = wineName;
            wine.Country = country;
            wine.Grape = grape;
            wine.Region = region;
            wine.Sortiment = sortiment;
            wine.Price = price;
            return wine;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WineName
        {
            get
            {
                return _WineName;
            }
            set
            {
                OnWineNameChanging(value);
                ReportPropertyChanging("WineName");
                _WineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WineName");
                OnWineNameChanged();
            }
        }
        private global::System.String _WineName;
        partial void OnWineNameChanging(global::System.String value);
        partial void OnWineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Grape
        {
            get
            {
                return _Grape;
            }
            set
            {
                OnGrapeChanging(value);
                ReportPropertyChanging("Grape");
                _Grape = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Grape");
                OnGrapeChanged();
            }
        }
        private global::System.String _Grape;
        partial void OnGrapeChanging(global::System.String value);
        partial void OnGrapeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sortiment
        {
            get
            {
                return _Sortiment;
            }
            set
            {
                OnSortimentChanging(value);
                ReportPropertyChanging("Sortiment");
                _Sortiment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Sortiment");
                OnSortimentChanged();
            }
        }
        private global::System.String _Sortiment;
        partial void OnSortimentChanging(global::System.String value);
        partial void OnSortimentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();

        #endregion
    
    }

    #endregion
    
}
